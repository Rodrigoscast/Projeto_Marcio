# üß† Projeto Marcio

## üéØ Objetivo

O Projeto Marcio √© uma plataforma web desenvolvida para conscientiza√ß√£o sobre fake news, suporte ao usu√°rio e gest√£o de contas, integrando recursos de intelig√™ncia artificial, autentica√ß√£o segura e arquitetura moderna.

O objetivo √© oferecer uma experi√™ncia intuitiva, segura e escal√°vel, promovendo o combate √† desinforma√ß√£o e facilitando o acesso ao suporte.

## üß∞ Tecnologias Utilizadas

- **Back-end:**
  - FastAPI (Python)
  - Supabase (autentica√ß√£o e banco de dados)
  - Uso da API do Groq console para integra√ß√£o com intelig√™ncia artificial
- **Front-end:**
  - Next.js (React)
  - TailwindCSS
- **Banco de Dados:**
  - Supabase (PostgreSQL)
- **Criptografia & Autentica√ß√£o:**
  - JWT para autentica√ß√£o segura e prote√ß√£o de rotas
- **Intelig√™ncia Artificial:**
  - Uso de Chat-GPT e Copilot para aux√≠lo de c√≥digo
- **Arquitetura da Aplica√ß√£o:**
  - Separa√ß√£o entre frontend (Next.js) e backend (FastAPI)
  - Comunica√ß√£o via API REST
  - Autentica√ß√£o baseada em JWT
  - Integra√ß√£o com Supabase para dados e autentica√ß√£o

## üèóÔ∏è Estrutura do Projeto

```
Projeto-Marcio/
‚îú‚îÄ‚îÄ backend/                  # API REST com FastAPI, rotas, autentica√ß√£o, IA
‚îú‚îÄ‚îÄ frontend/                 # Interface web com Next.js
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ app/             # P√°ginas (fake news, suporte, login, dashboard)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/      # Componentes reutiliz√°veis
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ contexts/        # Contextos globais (ex: autentica√ß√£o)
‚îî‚îÄ‚îÄ README.md
```

# Backend

Este README documenta a parte backend do Projeto Marcio, descrevendo as rotas e funcionalidades que desenvolvi pessoalmente ao longo do trabalho.

## ‚úçÔ∏è Contribui√ß√£o Pessoal

Durante o desenvolvimento do backend, fiquei respons√°vel pela implementa√ß√£o das principais rotas e integra√ß√µes da aplica√ß√£o. Minhas entregas foram:

- **üîê Rotas de Autentica√ß√£o**
    - Cria√ß√£o das rotas para login e registro de usu√°rios.
    - Implementa√ß√£o da l√≥gica de valida√ß√£o de credenciais, gera√ß√£o de tokens JWT e prote√ß√£o de rotas autenticadas.

- **üë§ Rotas de Usu√°rio**
    - Desenvolvimento de endpoints para buscar dados do usu√°rio autenticado, atualizar informa√ß√µes e gerenciar perfis.
    - Integra√ß√£o com o banco de dados para recupera√ß√£o e atualiza√ß√£o segura dos dados.

- **ü§ñ Integra√ß√£o com API de IA**
    - Implementa√ß√£o de rotas respons√°veis por conectar a aplica√ß√£o com uma API externa de Intelig√™ncia Artificial.
    - Cria√ß√£o da l√≥gica para envio de prompts e tratamento das respostas da IA.

Essas rotas comp√µem a base da l√≥gica do backend, garantindo autentica√ß√£o segura, acesso controlado aos dados e integra√ß√£o inteligente com servi√ßos externos.

## üß† Vis√£o Geral do Backend

- **Framework:** FastAPI (Python)
- **Banco de Dados:** Supabase (PostgreSQL)
- **Autentica√ß√£o:** JWT
- **Integra√ß√£o Externa:** API de Intelig√™ncia Artificial (HTTP requests)

> O frontend foi desenvolvido separadamente pela equipe, utilizando Next.js e TailwindCSS, n√£o fazendo parte direta das minhas contribui√ß√µes.
